/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-08-25 05:36:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Form CSS</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("* {\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("	font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n");
      out.write("	margin: 15px 30px;\r\n");
      out.write("	font-size: 15px;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("	background-color: #f2f2f2;\r\n");
      out.write("	width: 700px;\r\n");
      out.write("	border: 2px solid lightgray;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	padding: 5px 15px 15px 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=\"text\"], input[type=\"email\"], input[type=\"passowrd\"], input[type=\"date\"],\r\n");
      out.write("	select, textarea {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	background-color: #fff;\r\n");
      out.write("	padding: 7px 10px 7px 10px;\r\n");
      out.write("	border: 1px solid gray;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	margin: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("fieldset {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	background-color: #fff;\r\n");
      out.write("	padding: 7px 10px 7px 10px;\r\n");
      out.write("	border: 1px solid gray;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".main_head {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	text-shadow: 5px 5px rgba(0, 0, 0, 0.259);\r\n");
      out.write("	font-size: 35px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button {\r\n");
      out.write("	background-color: #dad7d7;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	font-size: 20px;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button:hover {\r\n");
      out.write("	background-color: #afadad;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<form action=\"save\">\r\n");
      out.write("			<h1 class=\"main_head\">Payment Form</h1>\r\n");
      out.write("			<hr>\r\n");
      out.write("			<h1>User Information</h1>\r\n");
      out.write("			<br> <label for=\"fname\">First Name: *</label> <input type=\"text\"\r\n");
      out.write("				id=\"fname\" placeholder=\"First Name\" required> <br>\r\n");
      out.write("			<br> <label for=\"lname\">Last Name: *</label> <input type=\"text\"\r\n");
      out.write("				id=\"lname\" placeholder=\"Last Name\" required> <br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<fieldset>\r\n");
      out.write("				<legend>\r\n");
      out.write("					<strong>Gender</strong>\r\n");
      out.write("				</legend>\r\n");
      out.write("				<label for=\"Gender\">Gender: </label> <input type=\"radio\"\r\n");
      out.write("					name=\"Gender\" id=\"Gender\">Male <input type=\"radio\"\r\n");
      out.write("					name=\"Gender\" id=\"Gender\">Female\r\n");
      out.write("			</fieldset>\r\n");
      out.write("			<br> <label for=\"Add\">Address:</label> <br>\r\n");
      out.write("			<textarea name=\"\" id=\"\" placeholder=\"Enter your Address\" rows=\"5\"\r\n");
      out.write("				cols=\"100\"></textarea>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br> <label for=\"Email\">Email:</label> <input type=\"email\"\r\n");
      out.write("				id=\"Email\" placeholder=\"Pankaj@gmail.com\"> <br>\r\n");
      out.write("			<br> <label for=\"Password\">Password:</label> <input\r\n");
      out.write("				type=\"password\" id=\"Password\" placeholder=\"1111-2222-3333-4444\">\r\n");
      out.write("			<h1>Payment Information</h1>\r\n");
      out.write("			<fieldset>\r\n");
      out.write("				<legend>\r\n");
      out.write("					<strong>Card Details</strong>\r\n");
      out.write("				</legend>\r\n");
      out.write("				<label for=\"Card\">Card Type:</label> <select name=\"\" id=\"Card\">\r\n");
      out.write("					<option value=\"\">---Select Card---</option>\r\n");
      out.write("					<option value=\"Visa\">Visa</option>\r\n");
      out.write("					<option value=\"Master\">Master</option>\r\n");
      out.write("					<option value=\"Credit\">Credit</option>\r\n");
      out.write("					<option value=\"Credit\">Rupey</option>\r\n");
      out.write("				</select> <br>\r\n");
      out.write("				<br> <label for=\"Cnumber\">Card Number:*</label> <input\r\n");
      out.write("					type=\"text\" id=\"Cnumber\" required> <br>\r\n");
      out.write("				<br> <label for=\"Expiration\">Expiration date:</label> <input\r\n");
      out.write("					type=\"date\" id=\"Expiration\" required> <br>\r\n");
      out.write("				<br> <label for=\"CVV\">CVV:</label> <input type=\"text\" id=\"CVV\"\r\n");
      out.write("					required>\r\n");
      out.write("			</fieldset>\r\n");
      out.write("			<br>\r\n");
      out.write("			<!-- <input type=\"button\"> -->\r\n");
      out.write("			<button type=\"submit\">Submit</button>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br> <a href=\"findall\" target=\"_blank\"><button type=\"submit\">See\r\n");
      out.write("					all records</button></a>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
